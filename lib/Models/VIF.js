// Generated by CoffeeScript 1.10.0
(function () {
  var Promise, VIF, debug,
    bind = function (fn, me) {
      return function () {
        return fn.apply(me, arguments);
      };
    };

  debug = require('debug')('XenAPI:VIF');

  Promise = require('bluebird');

  VIF = (function () {
    var session, xenAPI;

    session = void 0;

    xenAPI = void 0;


    /**
     * Construct VIF
     * @class
     * @param      {Object}   session - An instance of Session
     * @param      {Object}   vif - A JSON object representing this VIF
     * @param      {String}   opaqueRef - The OpaqueRef handle to this VIF
     * @param      {Object}   xenAPI - An instance of XenAPI.
     */

    function VIF(_session, _vif, _opaqueRef, _xenAPI) {
      this.push = bind(this.push, this);
      this.toJSON = bind(this.toJSON, this);
      debug("constructor()");
      debug(_vif, _opaqueRef);
      if (!_session) {
        throw Error("Must provide `session`");
      }
      if (!_vif) {
        throw Error("Must provide `vif`");
      }
      if (!_opaqueRef) {
        throw Error("Must provide `opaqueRef`");
      }
      if (!_xenAPI) {
        throw Error("Must provide `xenAPI`");
      }
      session = _session;
      xenAPI = _xenAPI;
      this.opaqueRef = _opaqueRef;
      this.uuid = _vif.uuid;
      this.MAC = _vif.MAC;
      this.MTU = _vif.MTU;
      this.device = _vif.device;
      this.network = _vif.network;
      this.vm = _vif.VM;
      this.attached = _vif.currently_attached;
      this.ipv4_addresses = _vif.ipv4_addresses;
      this.ipv4_allowed = _vif.ipv4_allowed;
      this.ipv4_gateway = _vif.ipv4_gateway;
      this.ipv4_configuration_mode = _vif.ipv4_configuration_mode;
    }

    VIF.prototype.toJSON = function () {
      return {
        MAC: this.MAC,
        MTU: this.MTU,
        device: this.device,
        VM: this.vm,
        network: this.network,
        other_config: {},
        qos_algorithm_type: "",
        qos_algorithm_params: {}
      };
    };

    VIF.prototype.getVM = function () {

    }

    VIF.prototype.push = function () {
      return new Promise((function (_this) {
        return function (resolve, reject) {
          return session.request("VIF.create", [_this.toJSON()]).then(function (value) {
            debug(value);
            return resolve();
          })["catch"](function (e) {
            debug(e);
            return reject(e);
          });
        };
      })(this));
    };

    VIF.ALLOWED_OPERATIONS = {
      ATTACH: "attach",
      UNPLUG: "unplug"
    };

    return VIF;

  })();

  module.exports = VIF;

}).call(this);