// Generated by CoffeeScript 1.10.0
(function () {
  var Promise, VLAN, debug,
    bind = function (fn, me) {
      return function () {
        return fn.apply(me, arguments);
      };
    };

  debug = require('debug')('XenAPI:VLAN');

  Promise = require('bluebird');

  VLAN = (function () {
    var session, xenAPI;

    session = void 0;

    xenAPI = void 0;


    /**
     * Construct VLAN
     * @class
     * @param      {Object}   session - An instance of Session
     * @param      {Object}   VLAN - A JSON object representing this VLAN
     * @param      {String}   opaqueRef - The OpaqueRef handle to this VLAN
     * @param      {Object}   xenAPI - An instance of XenAPI.
     */

    function VLAN(_session, _VLAN, _opaqueRef, _xenAPI) {
      this.push = bind(this.push, this);
      this.toJSON = bind(this.toJSON, this);
      debug("constructor()");
      debug(_VLAN, _opaqueRef);
      if (!_session) {
        throw Error("Must provide `session`");
      }
      if (!_VLAN) {
        throw Error("Must provide `VLAN`");
      }
      if (!_opaqueRef) {
        throw Error("Must provide `opaqueRef`");
      }
      if (!_xenAPI) {
        throw Error("Must provide `xenAPI`");
      }
      session = _session;
      xenAPI = _xenAPI;
      this.uuid = _VLAN.uuid;
      this.tag = _VLAN.tag;
      this.tagged_PIF = _VLAN.tagged_PIF;
      this.untagged_PIF = _VLAN.untagged_PIF;
      this.other_config = _VLAN.other_config;
    }

    VLAN.prototype.toJSON = function () {
      return {
        uuid: this.uuid,
        tag: this.tag,
        tagged_PIF: this.tagged_PIF,
        untagged_PIF: this.untagged_PIF,
        other_config: this.other_config,
      };
    };

    return VLAN;

  })();

  module.exports = VLAN;

}).call(this);